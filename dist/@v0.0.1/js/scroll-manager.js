const smoothScrollTo=e=>{e?"scrollBehavior"in document.documentElement.style?e.scrollIntoView({behavior:"smooth",block:"start"}):window.scrollTo({top:e.offsetTop,behavior:"smooth"}):console.warn("Attempted to scroll to a null element.")},hashChangerHandler=()=>{const e=window.location.hash;if(!e)return;const o=CSS.escape(e),t=document.querySelector(`[href="${o}"]`);t?smoothScrollTo(t):console.warn(`Element with href="${o}" not found.`)},updateActiveSection=(()=>{const e=document.querySelectorAll(".c-heading-anchor"),o=document.querySelectorAll(".c-heading-anchor__link");let t;const n=()=>{requestAnimationFrame((()=>{if(window.scrollY<=50&&window.location.hash)return o.forEach((e=>e.classList.remove("c-heading-anchor__link--active"))),void history.replaceState(null,null,window.location.pathname);let t=null,n=0;for(let o=0;o<e.length;o++){const a=e[o],l=a.getBoundingClientRect();if(l.top<window.innerHeight&&l.bottom>0){const e=Math.min(l.bottom,window.innerHeight)-Math.max(l.top,0);e>n&&(n=e,t=a.querySelector("a[class='c-heading-anchor__link']"))}}if(t){const e=t.getAttribute("href");window.location.hash!==e&&(history.replaceState(null,null,e),o.forEach((o=>{o.classList.toggle("c-heading-anchor__link--active",o.getAttribute("href")===e)})))}else o.forEach((e=>e.classList.remove("c-heading-anchor__link--active"))),window.location.hash&&history.replaceState(null,null,window.location.pathname)}))};return()=>{clearTimeout(t),t=setTimeout(n,100)}})(),scrollManager=()=>{window.addEventListener("hashchange",hashChangerHandler),window.location.hash&&requestAnimationFrame((()=>{const e=CSS.escape(window.location.hash),o=document.querySelector(`[href="${e}"]`);o&&requestAnimationFrame((()=>smoothScrollTo(o)))})),window.addEventListener("scroll",updateActiveSection,{passive:!0})};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",scrollManager):scrollManager();